@model MyMarketingBackEnd.WebApp.Models.ClientVM
@using (Html.BeginForm("SaveClient", "ClientManagement", FormMethod.Post, new { id = "formClientBasic" }))
{
    if (ViewData["StartStepNum"] != null)
    {
    @Html.Hidden("currentStep", ViewData["StartStepNum"].ToString());
    }
    if (ViewData["LoadMode"] != null)
    {
    @Html.Hidden("loadMode", ViewData["LoadMode"].ToString());
                                                             if ((TransactionMode)ViewData["LoadMode"] == TransactionMode.Update)
                                                             {
    @Html.HiddenFor(model => model.ClientId)
                                                             }
    }
    <table id="clientDetailsform" class="basicForm">
        <tbody>
            <tr>
                <td>
                    <label>First Name </label>
                </td>
                <td>
                    @Html.TextBoxFor(model => model.FirstName)
                </td>
                <td>
                    <label>Last Name </label>
                </td>
                <td>
                    @Html.TextBoxFor(model => model.LastName)
                </td>
                <td>
                    <label>Business Name</label>
                </td>
                <td>
                    @Html.TextBoxFor(model => model.BusinessName)
                </td>
            </tr>
            <tr>
                <td>
                    <label>Primary Contact Number </label>
                </td>
                <td>
                    @Html.TextBoxFor(model => model.PrimaryPhoneNum)
                </td>
                <td>
                    <label>Alternate Contact Number </label>
                </td>
                <td>
                    @Html.TextBoxFor(model => model.AltPhoneNum)
                </td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td>
                    <label>Business Address </label>
                </td>
                <td colspan="3">
                    @Html.TextAreaFor(model => model.PrimaryAddress)
                </td>
                <td colspan="2"></td>
            </tr>
            <tr>
                <td>
                    <label>Primary Mail</label>
                </td>
                <td>
                    @Html.TextBoxFor(model => model.PrimaryMail)
                </td>
                <td>
                    <label>Facebook ID</label>
                </td>
                <td>
                    @Html.TextBoxFor(model => model.FacebookId)
                </td>
                <td>
                    <label>Is Active</label>
                </td>
                <td>
                    @Html.CheckBoxFor(model => model.IsActive)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.Label("UserName")
                </td>
                <td>
                    @if (ViewData["LoadMode"] != null && (TransactionMode)ViewData["LoadMode"] == TransactionMode.Create)
                    {
                        @Html.TextBoxFor(model => model.UserName)
                        @Html.HiddenFor(model => model.UserName)
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.UserName, new { disabled = "disabled" })
                    }
                </td>
                @if (ViewData["LoadMode"] != null && (TransactionMode)ViewData["LoadMode"] == TransactionMode.Create)
                {
                    <td>

                        <input type="button" id="genUName" value="Generate UserName" />
                    </td>
                }
                else
                {
                    <td>
                        @Html.Label("Created Time : ")
                    </td>
                    <td style="font-size: 11px; color: #000;">@Html.DisplayFor(model => model.CreatedDate)</td>
                }
                <td colspan="2"></td>
            </tr>
            @if (ViewData["LoadMode"] != null && (TransactionMode)ViewData["LoadMode"] == TransactionMode.Create)
            {
                <tr>
                    <td>
                        @Html.Label("Password")
                    </td>
                    <td>@Html.TextBoxFor(model => model.Password)</td>
                    <td>
                        <input type="button" id="genPswd" value="Generate Password" />
                    </td>
                    <td colspan="3"></td>
                </tr>
            }
            <tr>
                <td colspan="5">
                    @Html.ValidationSummary()
                </td>
                @if (ViewData["LoadMode"] != null && (TransactionMode)ViewData["LoadMode"] == TransactionMode.Create)
                {
                    <td>
                        <button type="submit" id="saveClientDtls" class="btnSubmit">SAVE & NEXT</button>
                        <button type="button" id="cancelClientDtls" class="btnGray btnCancel">CANCEL</button>
                    </td>
                }
                else
                {
                    <td>
                        <button type="submit" id="saveClientDtls" class="btnSubmit">UPDATE CLIENT</button>
                        <button type="button" id="cancelClientDtls" class="btnGray btnCancel">CANCEL</button>
                    </td>
               
                }
            </tr>
        </tbody>
    </table>
    <input id="_hdnUnCS" value="false" type="hidden" />
    <input id="_hdnUnPD" value="false" type="hidden" />    
}
<script type="text/javascript">
    $(document).ready(function () {
        // setting all textboxes during new client is being nullified
        //$('#formClientBasic input[type="text"]').each(function () {
        //    this.value = "";
        //});

        if ($("#PrimaryPhoneNum").val() == "0") {
            $("#PrimaryPhoneNum").val("");
        }

        if ($("#AltPhoneNum").val() == "0") {
            $("#AltPhoneNum").val("");
        }

        $("#UserName").val("");
        $("#Password").val("");

        $(".btnCancel").click(function () {
            $('#formClientBasic input[type="text"]').each(function () {
                this.value = "";
            });
        });

        $("#saveClientDtls").bind("click", function (e) {
            var isUNameCreated = false;
            var isPswdCreated = false;
            var isFNameFilled = false;
            var isLNameFilled = false;

            var firstNameVal = $("#FirstName").val();
            var lastNameVal = $("#LastName").val();

            if ($("#_hdnUnPD").val() == "true") {
                isUNameCreated = true;
            }

            if ($("#_hdnUnCS").val() == "true") {
                isPswdCreated = true;
            }

            if (firstNameVal != "" && firstNameVal != undefined && firstNameVal != null) {
                isFNameFilled = true;
            }

            if (lastNameVal != "" && lastNameVal != undefined && lastNameVal != null) {
                isLNameFilled = true;
            }

            if (isUNameCreated == false || isPswdCreated == false || isFNameFilled == false || isLNameFilled == false) {
                e.preventDefault();
                alert("Please fill in First Name, Last Name and generate both UserName and Password to continue saving.");
            }
        });

        $("#genUName").click(function () {

            var firstNameVal = $("#FirstName").val();
            var lastNameVal = $("#LastName").val();
            var isUNameCreated = $("#_hdnUnCS").val();

            if (firstNameVal == "" || firstNameVal == undefined || firstNameVal == null) {
                alert("Please fill in FirstName and LastName to generate UserId");
            }
            else if (lastNameVal == "" || lastNameVal == undefined || lastNameVal == null) {
                alert("Please fill in FirstName and LastName to generate UserId");
            }
            else if (isUNameCreated != "false") {
                alert("UserName had already been generated for this user");
            }
            else {
                var serviceURL = '/ClientManagement/GenerateUName';
                $.ajax({
                    type: "POST",
                    url: serviceURL,
                    data: JSON.stringify({ "firsName": firstNameVal, "lastName": lastNameVal }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: uNameSuccessCreation,
                    error: function (jqXHR, exception) {
                        alert(jqXHR.responseText);
                    }
                });
            }
        });

        function uNameSuccessCreation(data, status) {
            $("#UserName").val(data); 
            $("#UserName").attr('readonly', 'readonly');
            $("#_hdnUnCS").val("true");
        }

        $("#genPswd").click(function () {

            var firstNameVal = $("#FirstName").val();
            var lastNameVal = $("#LastName").val();
            var isUNameCreated = $("#_hdnUnCS").val();

            if (firstNameVal == "" || firstNameVal == undefined || firstNameVal == null) {
                alert("Please fill in FirstName and LastName to generate UserId");
            }
            else if (lastNameVal == "" || lastNameVal == undefined || lastNameVal == null) {
                alert("Please fill in FirstName and LastName to generate UserId");
            }
            else if (isUNameCreated == "false") {
                alert("Please generate User Name first by clicking 'Generate UserName' button");
            }
            else {
                var serviceURL = '/ClientManagement/GeneratePassword';
                $.ajax({
                    type: "POST",
                    url: serviceURL,
                    data: JSON.stringify({ "firsName": firstNameVal, "lastName": lastNameVal }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: psWdSuccessCreation,
                    error: function (jqXHR, exception) {
                        alert(jqXHR.responseText);
                    }
                });
            }
        });

        function psWdSuccessCreation(data, status) {
            $("#Password").val(data);
            $("#Password").attr('readonly', 'readonly');
            $("#_hdnUnPD").val("true");
        }
    });
</script>
